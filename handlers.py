from telegram import Update
from telegram.ext import ContextTypes
from keyboards import start_keyboard, task_date_keyboard, task_time_keyboard, cancel_keyboard
from states import STATES
import datetime
import pytz

# –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! –Ø —Ç–≤–æ–π –Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞-–±–æ—Ç. üòä\n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=start_keyboard()
    )
    return STATES.MAIN

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ (—ç—Ç–∞–ø—ã)
async def add_task(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏:")
    return STATES.TASK_NAME

# –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
async def list_tasks(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∑–∞–¥–∞—á
    tasks = ["–ó–∞–¥–∞—á–∞ 1", "–ó–∞–¥–∞—á–∞ 2"]
    response = "\n".join([f"{i+1}. {task}" for i, task in enumerate(tasks)])
    await update.message.reply_text(response, reply_markup=start_keyboard())
    return STATES.MAIN

# –í–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏—è –∑–∞–¥–∞—á–∏
async def task_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['task_name'] = update.message.text
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –¥–ª—è –∑–∞–¥–∞—á–∏:", reply_markup=task_date_keyboard())
    return STATES.TASK_DATE

# –í–≤–æ–¥ –¥–∞—Ç—ã –∑–∞–¥–∞—á–∏
async def task_date(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['task_date'] = update.message.text
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –¥–ª—è –∑–∞–¥–∞—á–∏ (—Ñ–æ—Ä–º–∞—Ç: –ß–ß:–ú–ú):")
    return STATES.TASK_TIME

# –í–≤–æ–¥ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–¥–∞—á–∏
async def task_time(update: Update, context: ContextTypes.DEFAULT_TYPE):
    task_time_str = update.message.text.strip()
    try:
        task_time = datetime.datetime.strptime(task_time_str, "%H:%M")
        context.user_data['task_time'] = task_time
        await update.message.reply_text("–î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'):")
        return STATES.TASK_COMMENT
    except ValueError:
        await update.message.reply_text("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        return STATES.TASK_TIME

# –í–≤–æ–¥ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –∫ –∑–∞–¥–∞—á–µ
async def task_comment(update: Update, context: ContextTypes.DEFAULT_TYPE):
    comment = update.message.text if update.message.text.lower() != '–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å' else ""
    context.user_data['task_comment'] = comment
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–¥–∞—á—É (–±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –≤ tasks.py)
    await update.message.reply_text(f"–ó–∞–¥–∞—á–∞ '{context.user_data['task_name']}' —Å–æ–∑–¥–∞–Ω–∞!")
    return STATES.MAIN

# –û—Ç–º–µ–Ω–∞
async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–û—Ç–º–µ–Ω–µ–Ω–æ!", reply_markup=start_keyboard())
    return STATES.MAIN